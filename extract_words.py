import re
from collections import Counter
import operator
# a better print
from pprint import pprint

def main():
	# Doing allwords.txt
	with open("PeterPan.txt", encoding='latin-1') as f:
		# read file and make all lowercase
		text = f.read().lower()
		# basically a lexer; it finds the words excluding punctuation and whitespace
		words = re.findall('[a-z]+', text)
	
	# pprint(words)
	
	# writing the words from the list of words generated by findall() to the file
	with open("allwords.txt", "w", encoding = "latin-1") as f:
		for word in words:
			f.write(word + '\n')
	
	# Doing uniquewords.txt 
	with open("uniquewords.txt", "w", encoding = "latin-1") as f:
		# sort of like a default dict
		cnt = Counter()
		# counts how many times each word occurs, word is key and occurence is value
		for word in words:
			cnt[word] += 1
		unique_words = []
		# pprint(cnt.items())
		
		# find the words that only have an occurence of one and add them to the unique_words list
		for k, v in cnt.items():
			if v == 1:
				unique_words.append(k)
		# pprint(unique_words)
		for word in unique_words:
			f.write(word + "\n")
	
	# Doing frequencywords.txt
	with open("wordfrequency.txt", "w", encoding = "latin-1") as f:
		# set the keys of the dict as the occurence of words from cnt
		freq_words = {v: 0 for v in cnt.values()}
		# see how many words have a certain occurence, make that the value of the freq_words dict
		for k, v in freq_words.items():
			for v1 in cnt.values():
				if k == v1:
					freq_words[k] +=1
		# sort the dict and convert it to a list of tuples
		freq_words = sorted(freq_words.items())
		# print(freq_words)
		for k, v in freq_words:
			f.write(str(k) + ": " + str(v) + "\n")
		




if __name__ == "__main__":
	main()
